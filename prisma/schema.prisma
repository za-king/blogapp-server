generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  password     String
  image        String
  role         Role
  products     Product[]
  profile      Profile?
  refreshToken String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  activedAt    DateTime  @default(now())
}

model Profile {
  name    String
  address String
  phone   Int
  userId  String @unique
  user    User   @relation(fields: [userId], references: [id])
}

model Product {
  id                String             @id @default(uuid())
  name              String
  price             Float
  description       String
  rating            Int
  image             String
  stock             Int
  categoryId        String?
  category          Category?          @relation(fields: [categoryId], references: [id])
  userId            String?
  user              User?              @relation(fields: [userId], references: [id])
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  transactionsItems TransactionsItem[]

  @@map("products")
}

model Transaction {
  id                String              @id
  total             Int
  status            transactions_status
  customerName      String
  customerEmail     String
  snap_token        String?
  snap_redirect_url String?
  payment_method    String?
  createdAt         DateTime?           @default(now())
  updatedAt         DateTime?           @updatedAt
  transactionsItems TransactionsItem[]

  @@map("transactions")
}

model TransactionsItem {
  id            String      @id
  product_name  String
  price         Int
  quantity      Int
  createdAt     DateTime?   @default(now())
  updatedAt     DateTime?   @updatedAt
  transactionId String
  transactions  Transaction @relation(fields: [transactionId], references: [id], onUpdate: Restrict, map: "transactions_items_ibfk_1")
  productId     String
  products      Product     @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "transactions_items_ibfk_2")

  @@index([productId], map: "productId")
  @@index([transactionId], map: "transactionId")
  @@map("transactionsItems")
}

enum transactions_status {
  PENDING_PAYMENT
  PAID
  CANCELED
}

enum Role {
  USER
  ADMIN
}
